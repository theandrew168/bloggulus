# Hand-written OpenAPI (v3) spec for our REST server.
openapi: 3.0.1
info:
  title: Bloggulus REST API
  description: Programmatic access to blogs and posts
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /blogs:
    get:
      summary: Read blogs
      parameters:
        - name: limit
          required: false
          in: query
          schema:
            type: integer
            default: 20
            maximum: 50
        - name: offset
          required: false
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: JSON array of blogs
          content:
            application/json:
              schema:
                type: object
                properties:
                  blogs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Blog"
  /blogs/{id}:
    get:
      summary: Read blog by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Blog with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  blog:
                    $ref: "#/components/schemas/Blog"
  /posts:
    get:
      summary: Read posts
      parameters:
        - name: q
          description: Search expression
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: integer
            default: 20
            maximum: 50
        - name: offset
          required: false
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: JSON array of posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: "#/components/schemas/Post"
  /posts/{id}:
    get:
      summary: Read post by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Post with given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    $ref: "#/components/schemas/Post"
components:
  schemas:
    Blog:
      type: object
      properties:
        blog_id:
          type: integer
        feed_url:
          type: string
        site_url:
          type: string
        title:
          type: string
    Post:
      type: object
      properties:
        post_id:
          type: integer
        url:
          type: string
        title:
          type: string
        updated:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        blog:
          $ref: "#/components/schemas/Blog"
